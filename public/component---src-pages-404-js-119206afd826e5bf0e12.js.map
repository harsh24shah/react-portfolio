{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/404.js"],"names":["Layout","children","useEffect","link","cursor","animateit","target","speed","smooth","document","scrollingElement","documentElement","body","parentNode","moving","pos","scrollTop","frame","scrolled","e","preventDefault","delta","detail","wheelDelta","normalizeWheelDelta","Math","max","min","scrollHeight","clientHeight","update","abs","requestFrame","addEventListener","passive","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","func","setTimeout","SmoothScroll","querySelectorAll","querySelector","classList","add","type","remove","forEach","b","x","clientX","y","clientY","style","left","top","data","Fragment","className","siteTitle","site","siteMetadata","title","NotFoundPage"],"mappings":"uLAqJeA,EAnEA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhBC,qBAAU,WAGR,IACQC,EACAC,EACAC,GAzES,SAACC,EAAQC,EAAOC,GAC/BF,IAAWG,WACbH,EAAUG,SAASC,kBACdD,SAASE,iBACTF,SAASG,KAAKC,YACdJ,SAASG,MAEhB,IAAIE,GAAS,EACTC,EAAMT,EAAOU,UACbC,EAAQX,IAAWG,SAASG,MAC3BH,SAASE,gBACVF,SAASE,gBACTL,EAKJ,SAASY,EAASC,GAChBA,EAAEC,iBAEF,IAAIC,EAQN,SAA6BF,GAC3B,OAAIA,EAAEG,OACAH,EAAEI,WACGJ,EAAEI,WAAaJ,EAAEG,OAAS,IAAMH,EAAEG,OAAS,EAAI,GAAK,IAEnDH,EAAEG,OAAS,EAEdH,EAAEI,WAAa,IAfZC,CAAoBL,GAEhCJ,IAAQM,EAAQd,EAChBQ,EAAMU,KAAKC,IAAI,EAAGD,KAAKE,IAAIZ,EAAKT,EAAOsB,aAAeX,EAAMY,eAEvDf,GAAQgB,IAaf,SAASA,IACPhB,GAAS,EAET,IAAIO,GAASN,EAAMT,EAAOU,WAAaR,EAEvCF,EAAOU,WAAaK,EAEhBI,KAAKM,IAAIV,GAAS,GACpBW,EAAaF,GAEbhB,GAAS,EAlCbR,EAAO2B,iBAAiB,aAAcf,EAAU,CAAEgB,SAAS,IAC3D5B,EAAO2B,iBAAiB,iBAAkBf,EAAU,CAAEgB,SAAS,IAoC/D,IAAIF,EAEAG,OAAOC,uBACPD,OAAOE,6BACPF,OAAOG,0BACPH,OAAOI,wBACPJ,OAAOK,yBACP,SAAUC,GACRN,OAAOO,WAAWD,EAAM,KAS5BE,CAAalC,SAAU,IAAK,IAGpBN,EAAOM,SAASmC,iBAAiB,KACjCxC,EAASK,SAASoC,cAAc,WAChCxC,EAAY,SAAUc,GAO1Bf,EAAO0C,UAAUC,IAAI,UAEN,eAAX5B,EAAE6B,MAEJ5C,EAAO0C,UAAUG,OAAO,WAU5B9C,EAAK+C,SAAQ,SAAAC,GAAC,OAAIA,EAAElB,iBAAiB,YAAa5B,MAClDF,EAAK+C,SAAQ,SAAAC,GAAC,OAAIA,EAAElB,iBAAiB,aAAc5B,MACnD8B,OAAOF,iBAAiB,aARL,SAAAd,GAAM,IACNiC,EAAkBjC,EAA3BkC,QAAqBC,EAAMnC,EAAfoC,QACpBnD,EAAOoD,MAAMC,KAAOL,EAAI,KACxBhD,EAAOoD,MAAME,IAAMJ,EAAI,WAS7B,IAAMK,EAAI,OAUV,OACE,oCACE,kBAAC,mBAAD,KACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,QACb,0BAAMA,UAAU,UACd,kBAAC,IAAD,CAAQC,UAAWH,EAAKI,KAAKC,aAAaC,QAC1C,yBAAKJ,UAAU,WACf,yBAAKA,UAAU,gBAAgB5D,GAC/B,kBAAC,IAAD,Y,YCvHCiE,UAZM,kBACnB,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKD,MAAM,mBACX,6BACE,yBAAKJ,UAAU,mBACb,yCACA","file":"component---src-pages-404-js-119206afd826e5bf0e12.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React, { useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport \"./app.scss\"\r\n\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\n\r\n\r\nconst SmoothScroll = (target, speed, smooth) => {\r\n  if (target === document)\r\n    target = (document.scrollingElement\r\n      || document.documentElement\r\n      || document.body.parentNode\r\n      || document.body) // cross browser support for document scrolling\r\n\r\n  var moving = false\r\n  var pos = target.scrollTop\r\n  var frame = target === document.body\r\n    && document.documentElement\r\n    ? document.documentElement\r\n    : target // safari is the new IE\r\n\r\n  target.addEventListener('mousewheel', scrolled, { passive: false })\r\n  target.addEventListener('DOMMouseScroll', scrolled, { passive: false })\r\n\r\n  function scrolled(e) {\r\n    e.preventDefault(); // disable default scrolling\r\n\r\n    var delta = normalizeWheelDelta(e)\r\n\r\n    pos += -delta * speed\r\n    pos = Math.max(0, Math.min(pos, target.scrollHeight - frame.clientHeight)) // limit scrolling\r\n\r\n    if (!moving) update()\r\n  }\r\n\r\n  function normalizeWheelDelta(e) {\r\n    if (e.detail) {\r\n      if (e.wheelDelta)\r\n        return e.wheelDelta / e.detail / 40 * (e.detail > 0 ? 1 : -1) // Opera\r\n      else\r\n        return -e.detail / 3 // Firefox\r\n    } else\r\n      return e.wheelDelta / 120 // IE,Safari,Chrome\r\n  }\r\n\r\n  function update() {\r\n    moving = true\r\n\r\n    var delta = (pos - target.scrollTop) / smooth\r\n\r\n    target.scrollTop += delta\r\n\r\n    if (Math.abs(delta) > 0.5)\r\n      requestFrame(update)\r\n    else\r\n      moving = false\r\n  }\r\n\r\n  var requestFrame = function () { // requestAnimationFrame cross browser\r\n    return (\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame ||\r\n      window.oRequestAnimationFrame ||\r\n      window.msRequestAnimationFrame ||\r\n      function (func) {\r\n        window.setTimeout(func, 1000 / 50);\r\n      }\r\n    );\r\n  }()\r\n}\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  useEffect(() => {\r\n    SmoothScroll(document, 120, 12);\r\n\r\n    (function () {\r\n      const link = document.querySelectorAll('a');\r\n      const cursor = document.querySelector('.cursor');\r\n      const animateit = function (e) {\r\n        //  const span = this.querySelector('span');\r\n        // const { offsetX: x, offsetY: y } = e,\r\n        //   { offsetWidth: width, offsetHeight: height } = this,\r\n        // move = 25,\r\n        // xMove = x / width * (move * 2) - move,\r\n        // yMove = y / height * (move * 2) - move;\r\n        cursor.classList.add('active');\r\n        // span.style.transform = `translate(${xMove}px, ${yMove}px)`;\r\n        if (e.type === 'mouseleave') {\r\n          //  span.style.transform = '';\r\n          cursor.classList.remove('active');\r\n        }\r\n\r\n      };\r\n      const editCursor = e => {\r\n        const { clientX: x, clientY: y } = e;\r\n        cursor.style.left = x + 'px';\r\n        cursor.style.top = y + 'px';\r\n      };\r\n\r\n      link.forEach(b => b.addEventListener('mousemove', animateit));\r\n      link.forEach(b => b.addEventListener('mouseleave', animateit));\r\n      window.addEventListener('mousemove', editCursor);\r\n    })();\r\n  });\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <ParallaxProvider>\r\n        <React.Fragment>\r\n          <div className=\"main\">\r\n            <main className='routed'>\r\n              <Header siteTitle={data.site.siteMetadata.title} />\r\n              <div className=\"cursor\"></div>\r\n              <div className=\"main-content\">{children}</div>\r\n              <Footer />\r\n            </main>\r\n          </div>\r\n        </React.Fragment>\r\n      </ParallaxProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <div>\r\n      <div className=\"content-wrapper\">\r\n        <h1>NOT FOUND</h1>\r\n        <p>You just hit a route that doesn't exist... the sadness.</p>\r\n      </div>\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n"],"sourceRoot":""}